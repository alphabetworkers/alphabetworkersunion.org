@use '../css/constants';

:host {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 16px;
  color: constants.$gray-80;
}

.dollar-input {
  display: flex;
  flex-direction: row;
  grid-column: 1;
}

.dollar-input > input {
  padding-left: 26px;
  text-align: right;
  flex: 1;
}

.dollar-input > .select {
  width: 84px;
  margin-left: 16px;
}

.dollar-input:after {
  content: '$';
  font-size: 24px;
  padding: 10px 0;
  text-align: right;
  width: 24px;
  margin-right: -24px;
  color: rgba(0, 0, 0, 0.4);
  order: -1;
  z-index: 1;
}

.dues {
  font-size: 1.6em;
  line-height: 48px;
}

.card-container,
input,
select,
button {
  font-size: 24px;
  border: solid 2px constants.$brand;
  border-radius: 6px;
  padding: 0 8px;
  background: white;
  line-height: 48px;
  height: 48px;
  box-sizing: border-box;
  color: constants.$gray-80;
}

select {
  appearance: none;
  width: 100%;
}

.select {
  position: relative;
}

.select::after {
  content: '';
  width: 10px;
  height: 6px;
  background-color: constants.$black;
  clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  position: absolute;
  top: 22px;
  right: 10px;
}

.payment-method-toggle {
  display: flex;
  flex-direction: row;
  grid-column: 1 / 3;
}

.payment-method-toggle button {
  background: white;
  margin-right: 16px;
}

.card-container {
  grid-column: 1 / 3;
  padding: 8px;
}

button.primary,
.payment-method-toggle button.selected {
  background: constants.$brand;
  color: white;
}

button.submit {
  grid-column: 1 / 3;
}

/* Remove controls from number input. */
input[type='number'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
}
