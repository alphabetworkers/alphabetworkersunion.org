@use '../css/constants' as *;

$line-height: 1.25em;

:host {
  display: flex;
  font-size: 2em;
  font-weight: 600;
  white-space: nowrap;
  line-height: $line-height;
  position: relative;
}

::slotted(*) {
  flex: none;
  color: $brand;
  scroll-snap-align: center;
}

.static-item {
  position: relative;
  z-index: 1;
}

.dynamic-item {
  position: relative;

  &:after {
    content: '';
    position: absolute;
    pointer-events: none;
  }
}

slot {
  display: flex;
}

.scroll-container {
  scroll-snap-type: both mandatory;
  box-sizing: border-box;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    width: 0 !important;
  }
}

.scroll-button {
  position: absolute;
  opacity: 0;
  z-index: 1;
  border: none;
  background: none;
  width: 40px;
  height: 40px;
  margin: 0;
  padding: 10px;
  box-sizing: border-box;
  border-radius: 20px;
  fill: rgba(0, 0, 0, 0.5);
  transition:
    background-color 150ms ease,
    opacity 150ms ease;
  font-family: 'Latina Essential';
  font-weight: bold;
  font-size: 0.6em;
  line-height: 0px;

  &:hover,
  &:focus {
    opacity: 1;
    background-color: rgba(0, 0, 0, 0.15);
  }

  &:active {
    background-color: rgba(0, 0, 0, 0.25);
  }

  &[disabled] {
    background-color: transparent;
  }
}

:host(:hover) .scroll-button {
  opacity: 1;
}

// Vertical stacked layout.
@media only screen and (max-width: 1599px) {
  :host {
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
    max-width: 720px;
  }

  ::slotted(*) {
    text-align: center;
    width: calc(100vw - 16px);
    max-width: 720px;
  }

  .dynamic-item {
    padding: 0;
    height: $line-height;

    &:after {
      inset: 0;
      top: #{0 - $line-height};
      bottom: #{0 - $line-height};
      box-shadow:
        inset 1em 0 1em #fff,
        inset -1em 0 1em #fff;
    }
  }

  slot {
    flex-direction: row;
    padding: 0;
    width: max-content;
  }

  slot[name='who'] {
    flex-direction: row-reverse;
  }

  .scroll-container {
    width: calc(100vw - 16px);
    max-width: 720px;
    overflow-x: scroll;
    overflow-y: hidden;
  }

  .scroll-button {
    top: 50%;
    transform: translateY(-50%);
  }

  .scroll-back {
    left: 0;
    transform: translateY(-50%) rotate(-90deg);
  }

  .scroll-forward {
    right: 0;
    transform: translateY(-50%) rotate(-90deg);
  }
}

// Vertical stacked layout for phones.
@media only screen and (max-width: 620px) {
  :host {
    font-size: 1.2em;
  }
}

// Horizontal layout for giant wide screens.
@media only screen and (min-width: 1600px) {
  :host {
    padding-left: 8.8em; // Difference between widest and final strings.
    flex-flow: row nowrap;
    justify-content: center;
    align-items: flex-start;
  }

  ::slotted(*) {
    text-align: start;
  }

  .we-are ::slotted(*) {
    text-align: center;
  }

  .static-item {
    margin-top: $line-height;
  }

  .dynamic-item {
    padding: 0 0.8ex;
    padding-top: -$line-height;
    height: #{$line-height * 3};

    &:after {
      inset: 0;
      box-shadow:
        inset 0 #{0 - $line-height} 0.25em #fff,
        inset 0 #{$line-height + 0.1em} 0.25em #fff;
    }
  }

  slot {
    flex-direction: column;
    padding: $line-height 0;
  }

  slot[name='who'] {
    flex-direction: column-reverse;
  }

  .scroll-container {
    padding: $line-height 0;
    max-height: #{$line-height * 3};
    overflow-x: hidden;
    overflow-y: scroll;
  }

  .scroll-button {
    left: 50%;
    transform: translateX(-50%);
  }

  .scroll-back {
    top: 6px;
  }

  .scroll-forward {
    bottom: 0;
    padding-top: 12px;
    padding-bottom: 8px;
  }
}
